volumes:
  ui_node_modules:

services:
  backend:
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    environment:
      # Python
      PYTHONUNBUFFERED: "1"
      # === main.py reads these (env-driven CORS/CSP) ===
      FRONTEND_ORIGINS: ${FRONTEND_ORIGINS:-http://localhost:${FRONTEND_PORT:-3003}}
      DEV_BACKEND_HTTP: ${DEV_BACKEND_HTTP:-http://localhost:${BACKEND_HOST_PORT:-5000}}
      DEV_BACKEND_WS: ${DEV_BACKEND_WS:-ws://localhost:${BACKEND_HOST_PORT:-5000}}
      CORS_ALLOW_METHODS: ${CORS_ALLOW_METHODS:-GET,POST,PUT,PATCH,DELETE,OPTIONS}
      CSP_CONNECT_EXTRAS: ${CSP_CONNECT_EXTRAS:-}
    ports:
      # host:container (stay env-driven so you can dodge port clashes)
      - "${BACKEND_HOST_PORT:-5000}:${BACKEND_CONTAINER_PORT:-8000}"
    volumes:
      - ./apps/backend:/app:rw
    command: >
      sh -lc "uvicorn main:app --host 0.0.0.0 --port ${BACKEND_CONTAINER_PORT:-8000}
      --reload --reload-exclude setup.py"
    healthcheck:
      # runs INSIDE the container; use container port & 127.0.0.1
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:${BACKEND_CONTAINER_PORT:-8000}/docs || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  frontend:
    user: "${UID:-1000}:${GID:-1000}"
    build:
      context: ./apps/ui
      dockerfile: Dockerfile.dev
    working_dir: /app
    environment:
      # UI port (browser port)
      FRONTEND_PORT: ${FRONTEND_PORT:-3003}

      # Browser → API (host-mapped). On Render you’ll set this to your public backend URL.
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL:-http://localhost:${BACKEND_HOST_PORT:-5000}}

      # Server-side (SSR/API routes) → API (Docker service). On Render this equals the public backend URL.
      BACKEND_INTERNAL_URL: ${BACKEND_INTERNAL_URL:-http://backend:${BACKEND_CONTAINER_PORT:-8000}}
    command: sh -lc "npm run dev -- -p ${FRONTEND_PORT:-3003}"
    ports:
      - "${FRONTEND_PORT:-3003}:${FRONTEND_PORT:-3003}"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./apps/ui:/app:rw
      - ui_node_modules:/app/node_modules
